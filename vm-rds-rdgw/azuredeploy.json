{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The name of the AD domain. For example run.local"
      },
      "defaultValue": "run.local"
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "The vnet name of AD domain. For example johnvnet1"
      },
      "defaultValue": ""
    },
    "SubnetName": {
      "type": "string",
      "metadata": {
        "description": "The subnet name of AD domain. For example johnsubnet1"
      },
      "defaultValue": ""
    },
    "storageAccountName": {
        "type": "string",
        "metadata": {
          "description": "The storage account name"
        },
        "defaultValue": ""
      },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'administrator'. For example johnadmin"
      },
      "defaultValue": ""
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and the domain"
      },
      "defaultValue": ""
    },
    "imageSKU": {
      "type": "string",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Windows server SKU"
      },
      "defaultValue": "2016-Datacenter"
    },
    "LBFEIP": {
        "type": "string",
        "metadata": {
          "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'administrator'. For example johnadmin"
        },
        "defaultValue": "10.1.0.19"
      },
    "dnsServerPrivateIp": {
        "type": "string",
        "metadata": {
          "description": "IP address of DNS Server"
        },
        "defaultValue": "10.1.0.9"
      }
  },
  "variables": {
    "storageAccountType": "Standard_LRS",
    "uniqueStorageAccountContainerName": "vhdsrdgw",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "subnet-id": "[concat(resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName')),'/subnets/',parameters('SubnetName'))]",
    "assetLocation": "https://github.com/hyperionian/ARM-Templates/raw/master/vm-rds-rdgw",
    "privateIPAllocationMethod": "static"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "gw-availabilityset",
      "location": "[resourceGroup().location]"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers",
      "name": "RDGWLoadBalancer",
      "location": "[resourceGroup().location]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LBFE",
            "properties": {
                "privateIPAllocationMethod": "[variables('privateIPAllocationMethod')]",
                "privateIPAddress": "[parameters('LBFEIP')]",
                "subnet": {
                    "id": "[variables('subnet-id')]"
                }
            }
            
          }
        ],
        "backendAddressPools": [
          {
            "name": "LBBAP"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule01",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','RDGWLoadbaLancer'),'/frontendIPConfigurations/LBFE')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','RDGWLoadBalancer'),'/backendAddressPools/LBBAP')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "SourceIPProtocol",
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','RDGWLoadBalancer'),'/probes/tcpProbe')]"
              }
            }
          },
          {
            "name": "LBRule02",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','RDGWLoadBalancer'),'/frontendIPConfigurations/LBFE')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','RDGWLoadBalancer'),'/backendAddressPools/LBBAP')]"
              },
              "protocol": "Udp",
              "frontendPort": 3391,
              "backendPort": 3391,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "SourceIPProtocol",
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','RDGWLoadBalancer'),'/probes/tcpProbe01')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          },
          {
            "name": "tcpProbe01",
            "properties": {
              "protocol": "Tcp",
              "port": 3391,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "inboundNatRules": [
          {
            "name": "rdp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','RDGWLoadBalancer'),'/frontendIPConfigurations/LBFE')]"
              },
              "protocol": "tcp",
              "frontendPort": 3389,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }

        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "rdgwnic",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/loadBalancers/RDGWLoadBalancer"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','RDGWLoadBalancer'),'/backendAddressPools/LBBAP')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','RDGWLoadBalancer'),'/inboundNatRules/rdp')]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "[parameters('dnsServerPrivateIp')]"
          ]
        }
      }
    },
    
   
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "rdgw",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', 'gw-availabilityset')]",
        "Microsoft.Network/networkInterfaces/rdgwnic"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_A2"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'gw-availabilityset')]"
        },
        "osProfile": {
          "computerName": "rdgw",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/','rdgw-os-disk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces','rdgwnic')]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "type": "extensions",
          "name": "rdgw",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', 'rdgw')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.11",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[concat(variables('assetLocation'),'/DSC/Configuration.zip')]",
              "ConfigurationFunction": "Configuration.ps1\\Gateway",
              "Properties": {
                "DomainName": "[parameters('domainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    }
  ]
}
