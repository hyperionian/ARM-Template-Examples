{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sqlServerName": {
            "type": "string",
            "metadata": {
                "description": "The name of the primary SQL Server."
            }
        },
        "sqlServerAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "The administrator username of the primary SQL Server."
            }
        },
        "sqlServerAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The administrator password of the primary SQL Server."
            }
        },
        "sqlServerAdAdmin": {
            "type": "string",
            "metadata": {
                "description": "Azure AD administrator for Azure SQL DB"
            }
        },
        "sqlServerAdAdminObjectId": {
            "type": "securestring",
            "metadata": {
                "description": "Azure AD administrator Object ID for Azure SQL DB"
            }
        },
        "startIPAddress": {
            "type": "string",
            "metadata": {
                "description": "IP Address of the Apps"
            }
        },
        "endIPAddress": {
            "type": "string",
            "metadata": {
                "description": "IP Address of the Apps. This can be the same as startIPAddress if there is only a single IP to allow"
            }
        },
        "storageaccountname": {
            "type": "string",
            "metadata": {
                "description": "Tier 2 storage account name for storing database audit events"
            }
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "Virtual Network Name to be allowed to Azure SQL DB"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Subnet name to be allowed to Azure SQL DB"
            }
        },
        "networkRGName": {
            "type": "string",
            "metadata": {
                "description": "Resource Group name of the Virtual Network Subnet with Microsoft.Sql service endpoint"
            }
        },
        "storageRGName": {
            "type": "string",
            "metadata": {
                "description": "Resource Group name of the Storage Account for SQL DB auditing"
            }
        },
        "OMSRGName": {
            "type": "string",
            "metadata": {
                "description": "Resource Group name of the OMS workspace"
            }
        },
        "workspacename": {
            "type": "string",
            "metadata": {
                "description": "OMS workspace name"
            }
        }

    },
    "variables": {
        "sqlDatabaseName": "MyData",
        "sqlDatabaseServiceObjective": "Basic",
        "sqlDatabaseEdition": "Basic",
        "vnetID": "[resourceId(parameters('networkrgName'), 'Microsoft.Networks/virtualNetworks' ,parameters('vnetName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Sql/servers",
            "kind": "v12.0",
            "name": "[parameters('sqlServerName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "administratorLogin": "[parameters('sqlServerAdminUsername')]",
                "administratorLoginPassword": "[parameters('sqlServerAdminPassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "name": "[variables('sqlDatabaseName')]",
                    "type": "databases",
                    "apiVersion": "2014-04-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[parameters('sqlServerName')]"
                    ],
                    "properties": {
                        "edition": "[variables('sqlDatabaseEdition')]",
                        "requestedServiceObjectiveName": "[variables('sqlDatabaseServiceObjective')]"
                    },
                    "resources": [
                        {
                            "name": "current",
                            "type": "transparentDataEncryption",
                            "dependsOn": [
                                "[variables('sqldatabaseName')]"
                            ],
                            "location": null,
                            "apiVersion": "2014-04-01",
                            "properties": {
                                "status": "Enabled"
                            }
                        },
                        {
                            "type": "providers/diagnosticSettings",
                            "name": "Microsoft.Insights/service",
                            "dependsOn": [
                              "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), variables('sqlDatabaseName'))]"
                            ],
                            "apiVersion": "2015-07-01",
                            "properties": {
                              "workspaceId": "[resourceId(parameters('OMSRGName'), 'Microsoft.OperationalInsights/workspaces', parameters('workspacename'))]",
                              "logs": [
                                {
                                  "category": "DatabaseWaitStatistics",
                                  "enabled": true,
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  }
                                }
                              ],
                              "metrics": [
                                {
                                  "timeGrain": "PT1M",
                                  "enabled": true,
                                  "retentionPolicy": {
                                    "enabled": false,
                                    "days": 0
                                  }
                                }
                              ]
                            }
                          }
                    ]
                },
                {
                    "type": "firewallrules",
                    "name": "AllowAppsAccess",
                    "apiVersion": "2014-04-01",
                    "location": "[resourceGroup().location]",
                    "properties": {
                        "endIpAddress": "[parameters('startIpAddress')]",
                        "startIpAddress": "[parameters('endIpAddress')]"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('sqlserverName'))]"
                    ]
                },
                {
                    "name": "sqlvnetrule",
                    "type": "virtualNetworkRules",
                    "apiVersion": "2015-05-01-preview",
                    "properties": {
                      "virtualNetworkSubnetId": "[variables('subnetRef')]"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('sqlserverName'))]"
                    ]
                  },
                {
                    "name": "activedirectory",
                    "type": "administrators",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2014-04-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
                    ],
                    "properties": {
                        "administratorType": "ActiveDirectory",
                        "login": "[parameters('sqlServerAdAdmin')]",
                        "sid": "[parameters('sqlServerAdAdminObjectId')]",
                        "tenantId": "[subscription().tenantId]"
                    }
                },
                {
                    "apiVersion": "2015-05-01-preview",
                    "type": "auditingSettings",
                    "name": "DefaultAuditPolicy",
                    "dependsOn": [
                      "[concat('Microsoft.Sql/servers/', parameters('sqlserverName'))]"
                    ],
                    "properties": {
                      "State": "Enabled",
                      "storageEndpoint": "[concat('https://', parameters ('storageAccountName'), '.blob.core.windows.net/')]",
                      "storageAccountAccessKey": "[listKeys(resourceId(parameters('StorageRGName'), 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
                      "retentionDays": 0,
                      "auditActionsAndGroups": null,
                      "storageAccountSubscriptionId": "[subscription().subscriptionId]",
                      "isStorageSecondaryKeyInUse": false
                    }
                  },
                {
                    "apiVersion": "2015-05-01-preview",
                    "type": "securityAlertPolicies",
                    "name": "DefaultSecurityAlert",
                    "dependsOn": [
                        "[parameters('sqlservername')]",
                        "[concat('Microsoft.Sql/servers/', parameters('sqlservername'), '/auditingSettings/DefaultAuditPolicy')]"
                    ],
                    "properties": {
                        "state": "Enabled",
                        "retentionDays": "10",
                        "emailAccountAdmins": "Disabled",
                        "emailAddresses": "run@run.com",
                        "disabledAlerts": "",
                        "storageEndpoint": "[concat('https://', parameters ('storageAccountName'), '.blob.core.windows.net/')]",
                        "storageAccountAccessKey": "[listKeys(resourceId(parameters('StorageRGName'),'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
                    }
                }
            ]
        }
    ],
    "outputs": {}
}